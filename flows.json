[
    {
        "id": "b8bbfb03.fd1c08",
        "type": "tab",
        "label": "CA Initialize",
        "disabled": false,
        "info": ""
    },
    {
        "id": "030d24a2a9defa6b",
        "type": "tab",
        "label": "Sign CSR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "02e5f353e21060b3",
        "type": "tab",
        "label": "Request certificate",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20e4ce8802f8b88f",
        "type": "tab",
        "label": "Inspect Certificate",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa7daa87.f23d38",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e325035d97b5ddfc",
        "type": "tab",
        "label": "OpenSSL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "72929af4.8afe14",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Private Certificate Authority",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e6b607ff.55b2e8",
        "type": "ui_tab",
        "name": "Issued certificates",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b39f2f66.e3c7",
        "type": "ui_tab",
        "name": "Inspect",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28dd68a.bd8d198",
        "type": "ui_tab",
        "name": "Sign CSR",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a4dc3656.5518a",
        "type": "ui_group",
        "name": "Issued certificates",
        "tab": "e6b607ff.55b2e8",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cefd5b5f.924ec",
        "type": "ui_group",
        "name": "Dropzone inspect",
        "tab": "b39f2f66.e3c7",
        "order": 1,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "5781adce.06a5d4",
        "type": "ui_group",
        "name": "Certificate info",
        "tab": "b39f2f66.e3c7",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "788715bd.13bec4",
        "type": "ui_group",
        "name": "Certificate Signing Request",
        "tab": "28dd68a.bd8d198",
        "order": 3,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b1277c2f80bd8d86",
        "type": "ui_tab",
        "name": "Request certificate",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "37ea4f556fa5e416",
        "type": "ui_group",
        "name": "Request Certificate",
        "tab": "b1277c2f80bd8d86",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74775ab0c0866553",
        "type": "ui_group",
        "name": "Inspect",
        "tab": "b39f2f66.e3c7",
        "order": 3,
        "disp": true,
        "width": "23",
        "collapse": false,
        "className": ""
    },
    {
        "id": "392047c5814e5a13",
        "type": "inject",
        "z": "b8bbfb03.fd1c08",
        "name": "Initialize CA",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "09e26e5c130962f9"
            ]
        ]
    },
    {
        "id": "073e98e6ad13ed06",
        "type": "file in",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "filename": "/data/certificates/certificates.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "eefbdb2714a9c6c5"
            ]
        ]
    },
    {
        "id": "df5150d3ef42759f",
        "type": "change",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "certificates",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "eefbdb2714a9c6c5",
        "type": "json",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "df5150d3ef42759f"
            ]
        ]
    },
    {
        "id": "1a33bf2cdbf973a5",
        "type": "catch",
        "z": "b8bbfb03.fd1c08",
        "name": "File does not exist",
        "scope": null,
        "uncaught": false,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "3e7c20b94e25298c"
            ]
        ]
    },
    {
        "id": "3e7c20b94e25298c",
        "type": "change",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "certificates",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 400,
        "wires": [
            [
                "1df3591ee155ac99"
            ]
        ]
    },
    {
        "id": "b2cd4162437675f4",
        "type": "file",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "filename": "/data/certificates/certificates.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b7b97943142596df",
        "type": "inject",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "073e98e6ad13ed06",
                "3dae490771600d82",
                "d13d6fbe74b9835b"
            ]
        ]
    },
    {
        "id": "1df3591ee155ac99",
        "type": "json",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 910,
        "y": 400,
        "wires": [
            [
                "b2cd4162437675f4"
            ]
        ]
    },
    {
        "id": "7ce8d4de9f121ee4",
        "type": "comment",
        "z": "b8bbfb03.fd1c08",
        "name": "Setup /certificates/certificates.json",
        "info": "",
        "x": 260,
        "y": 320,
        "wires": []
    },
    {
        "id": "78e8b3187627784d",
        "type": "link call",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "links": [
            "80b90f451ae687e9"
        ],
        "timeout": "30",
        "x": 460,
        "y": 180,
        "wires": [
            [
                "0110a8622e4f5eaa"
            ]
        ]
    },
    {
        "id": "09e26e5c130962f9",
        "type": "template",
        "z": "b8bbfb03.fd1c08",
        "name": "Set CA settings here",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"cn\": \"Home CA\",\n  \"organization\": \"Juhlin\",\n  \"caPassphrase\": \"frasseramera\"\n}",
        "output": "json",
        "x": 440,
        "y": 120,
        "wires": [
            [
                "734b1ecb8bc34f97"
            ]
        ]
    },
    {
        "id": "734b1ecb8bc34f97",
        "type": "change",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "certificates",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 120,
        "wires": [
            [
                "2a6ff81cfd1402af"
            ]
        ]
    },
    {
        "id": "2a6ff81cfd1402af",
        "type": "exec",
        "z": "b8bbfb03.fd1c08",
        "command": "rm -R /data/certificates",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 940,
        "y": 120,
        "wires": [
            [],
            [],
            [
                "78e8b3187627784d"
            ]
        ]
    },
    {
        "id": "a3338549dc772cd1",
        "type": "link call",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "links": [
            "e244ba1d956e1746"
        ],
        "timeout": "30",
        "x": 950,
        "y": 180,
        "wires": [
            [
                "9dcc1199851831b6",
                "795f790c55d98ed1"
            ]
        ]
    },
    {
        "id": "1d73b4e8dcaf33b1",
        "type": "comment",
        "z": "b8bbfb03.fd1c08",
        "name": "Initialize CA will remove any previous CA and certificates",
        "info": "",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "0110a8622e4f5eaa",
        "type": "change",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "request",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "certificates",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "a3338549dc772cd1"
            ]
        ]
    },
    {
        "id": "9dcc1199851831b6",
        "type": "debug",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 180,
        "wires": []
    },
    {
        "id": "3dae490771600d82",
        "type": "file in",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "filename": "/data/openssl/index.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 440,
        "y": 560,
        "wires": [
            [
                "9d9f7a56c49b345e"
            ]
        ]
    },
    {
        "id": "9d9f7a56c49b345e",
        "type": "function",
        "z": "b8bbfb03.fd1c08",
        "name": "Parse",
        "func": "rows = msg.payload.split(\"\\n\");\nlist = [];\nrows.forEach(function(row){\n    var items = row.split(\"\\t\");\n    if( items.length > 4 ) {\n        var timeparts = items[1].match(/.{1,2}/g);\n        var date = \"20\" + timeparts[0] + \"-\" + timeparts[1] + \"-\" + timeparts[2] + \" \" + timeparts[3] + \":\" + timeparts[4];\n        var cn = \"Undefined\";\n        var posCN = items[5].indexOf(\"/CN=\");\n        if( posCN > -1 )\n            cn = items[5].substr(posCN+4,items[5].length)\n        var filename = cn.replace(/\\s/g, '.').toLowerCase();\n        list.push({\n            id: items[3],\n            cn: cn,\n            status: items[0]===\"V\"?\"Valid\":items[0]===\"R\"?\"Revoked\":\"Undefined\",\n            expiration: date,\n            filename: filename\n        });\n    }\n})\n\n//Merger common names\nvar merger = {};\nlist.forEach(function(item){\n    merger[item.cn] = item;\n})\n\nmsg.payload = [];\nfor( var cn in merger )\n    msg.payload.push(merger[cn]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "be8c08777e6d2340"
            ]
        ]
    },
    {
        "id": "be8c08777e6d2340",
        "type": "ui_table",
        "z": "b8bbfb03.fd1c08",
        "group": "a4dc3656.5518a",
        "name": "Issued certificates",
        "order": 0,
        "width": "12",
        "height": "10",
        "columns": [
            {
                "field": "cn",
                "title": "Common name",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "expiration",
                "title": "Expiration",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 820,
        "y": 560,
        "wires": []
    },
    {
        "id": "974eb9e41b997ef0",
        "type": "link in",
        "z": "b8bbfb03.fd1c08",
        "name": "Refresh CA",
        "links": [
            "e5f505bf8e33a634",
            "795f790c55d98ed1",
            "47dc6265633db7d4"
        ],
        "x": 275,
        "y": 560,
        "wires": [
            [
                "3dae490771600d82",
                "d13d6fbe74b9835b"
            ]
        ]
    },
    {
        "id": "b498c6e2b702a053",
        "type": "comment",
        "z": "b8bbfb03.fd1c08",
        "name": "Refresh CA",
        "info": "",
        "x": 170,
        "y": 560,
        "wires": []
    },
    {
        "id": "795f790c55d98ed1",
        "type": "link out",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "mode": "link",
        "links": [
            "974eb9e41b997ef0"
        ],
        "x": 1135,
        "y": 180,
        "wires": []
    },
    {
        "id": "ad06ce04e2bbc9e0",
        "type": "ui_template",
        "z": "b8bbfb03.fd1c08",
        "group": "a4dc3656.5518a",
        "name": "Link",
        "order": 3,
        "width": "11",
        "height": "1",
        "format": "<h3>Download and install CA certificate  <a id=\"{{'download_'+$id}}\" href=\"\" style=\"color:Yellow\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n      if(!msg || !msg.payload )\n        return;\n    if( msg.payload.filename && msg.payload.filename.length ) {\n        $(\"#download_\"+scope.$id).attr(\"href\", \"/file/crt?name=\"+msg.payload.filename);\n        $(\"#download_\"+scope.$id).html(msg.payload.filename+\".crt\");\n    } else {\n        $(\"#download_\"+scope.$id).attr(\"\");\n        $(\"#download_\"+scope.$id).html(\"\");\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d13d6fbe74b9835b",
        "type": "change",
        "z": "b8bbfb03.fd1c08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "certificates[0]",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "ad06ce04e2bbc9e0"
            ]
        ]
    },
    {
        "id": "80cfd47868544682",
        "type": "ui_template",
        "z": "030d24a2a9defa6b",
        "group": "788715bd.13bec4",
        "name": "Certificate PEM",
        "order": 4,
        "width": "13",
        "height": "10",
        "format": "<h3>Paste certificate PEM here</h3>\n<textarea id=\"csrpem\" rows=\"30\" cols=\"80\" style=\"font-family:monospace\">{{msg.payload}}</textarea>\n\n<script>\nthis.scope.action = function() {\n    return $(\"#csrpem\").val();\n}\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    Sign certificate\n</md-button>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 180,
        "wires": [
            [
                "742b2cbe792f5ecb"
            ]
        ]
    },
    {
        "id": "74a74c5756e9b43b",
        "type": "ui_text_input",
        "z": "030d24a2a9defa6b",
        "name": "",
        "label": "CA Passphrase",
        "tooltip": "",
        "group": "788715bd.13bec4",
        "order": 1,
        "width": "5",
        "height": "1",
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 700,
        "y": 80,
        "wires": [
            [
                "762987c8fa08482e"
            ]
        ]
    },
    {
        "id": "dc7175f0687e9c50",
        "type": "ui_template",
        "z": "030d24a2a9defa6b",
        "group": "788715bd.13bec4",
        "name": "Signed certificate",
        "order": 5,
        "width": "13",
        "height": "9",
        "format": "<h3>Signed certificate</h3>\n<textarea rows=\"30\" cols=\"80\" style=\"font-family:monospace\">{{msg.payload}}</textarea>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3e500749b33c85",
        "type": "ui_text_input",
        "z": "030d24a2a9defa6b",
        "name": "",
        "label": "Filename",
        "tooltip": "",
        "group": "788715bd.13bec4",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "0b98c0b99d85efe7"
            ]
        ]
    },
    {
        "id": "e609efd3b7cd9421",
        "type": "ui_template",
        "z": "030d24a2a9defa6b",
        "group": "788715bd.13bec4",
        "name": "Link",
        "order": 3,
        "width": "11",
        "height": "1",
        "format": "<h3><a id=\"{{'download_'+$id}}\" href=\"\" style=\"color:Yellow\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        if( msg.filename && msg.filename.length ) {\n            $(\"#download_\"+scope.$id).attr(\"href\", \"/file/crt?name=\"+msg.payload.filename);\n            $(\"#download_\"+scope.$id).html(msg.payload.filename+\".crt\");\n        } else {\n            $(\"#download_\"+scope.$id).attr(\"\");\n            $(\"#download_\"+scope.$id).html(\"\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "762987c8fa08482e",
        "type": "change",
        "z": "030d24a2a9defa6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "caPassphrase",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0b98c0b99d85efe7",
        "type": "change",
        "z": "030d24a2a9defa6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "742b2cbe792f5ecb",
        "type": "function",
        "z": "030d24a2a9defa6b",
        "name": "Validate",
        "func": "var filename = flow.get(\"filename\");\nvar caPassphrase = flow.get(\"caPassphrase\");\n\nif(!filename || filename.length < 5) {\n    msg.topic = \"Input error\";\n    msg.payload = \"Set filename\";\n    node.send([msg,null]);\n    return;\n}\n\n\nif(!caPassphrase || caPassphrase.length < 2) {\n    msg.topic = \"Input error\";\n    msg.payload = \"Set CA Passphrase\";\n    node.send([msg,null]);\n    return;\n}\n\nif( msg.payload.length < 100 ) {\n    msg.topic = \"Input error\";\n    msg.payload = \"Paste CSR PEM Data\";\n    node.send([msg,null]);\n    return;\n}\n\nif( msg.payload.search(\"-----BEGIN CERTIFICATE REQUEST-----\") < 0 ) {\n    msg.topic = \"Input error\";\n    msg.payload = \"Not valid CSR PEM\";\n    node.send([msg,null]);\n    return;\n}\n\nmsg.payload = {\n    pem: msg.payload,\n    filename: filename,\n    caPassphrase: caPassphrase,\n    type: \"server\"\n}\n\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "6c5e5149622f271d"
            ],
            [
                "d035ea7a75d27ff4"
            ]
        ]
    },
    {
        "id": "6c5e5149622f271d",
        "type": "ui_toast",
        "z": "030d24a2a9defa6b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d035ea7a75d27ff4",
        "type": "link call",
        "z": "030d24a2a9defa6b",
        "name": "",
        "links": [
            "5005447c7403dfdd"
        ],
        "timeout": "30",
        "x": 880,
        "y": 240,
        "wires": [
            [
                "719846d5b3e7ddf3",
                "e609efd3b7cd9421"
            ]
        ]
    },
    {
        "id": "719846d5b3e7ddf3",
        "type": "function",
        "z": "030d24a2a9defa6b",
        "name": "Read file",
        "func": "msg.filename = \"/data/certificates/\" + msg.payload.filename + \".crt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 240,
        "wires": [
            [
                "80900ead41b8cd05"
            ]
        ]
    },
    {
        "id": "80900ead41b8cd05",
        "type": "file in",
        "z": "030d24a2a9defa6b",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "dc7175f0687e9c50"
            ]
        ]
    },
    {
        "id": "1ac6f6002f108968",
        "type": "ui_button",
        "z": "030d24a2a9defa6b",
        "name": "Clear All",
        "group": "788715bd.13bec4",
        "order": 5,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Clear All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "f7258493343a2e1f"
            ]
        ]
    },
    {
        "id": "f7258493343a2e1f",
        "type": "change",
        "z": "030d24a2a9defa6b",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 80,
        "wires": [
            [
                "74a74c5756e9b43b",
                "bc3e500749b33c85",
                "80cfd47868544682",
                "dc7175f0687e9c50",
                "e609efd3b7cd9421"
            ]
        ]
    },
    {
        "id": "28a9bb7ae65e0842",
        "type": "ui_form",
        "z": "02e5f353e21060b3",
        "name": "",
        "label": "",
        "group": "37ea4f556fa5e416",
        "order": 3,
        "width": "6",
        "height": "19",
        "options": [
            {
                "label": "Common Name",
                "value": "cn",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "CA Passphrase",
                "value": "caPassphrase",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "cn": "",
            "caPassphrase": ""
        },
        "payload": "",
        "submit": "Request",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "2132fb2796be62ee",
                "cb9ec4e20c4adb20"
            ]
        ]
    },
    {
        "id": "74f8250482174037",
        "type": "switch",
        "z": "02e5f353e21060b3",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 140,
        "wires": [
            [
                "2505f2b019e54c3c"
            ],
            [
                "4652b0cc397dcab1"
            ]
        ]
    },
    {
        "id": "2505f2b019e54c3c",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "Error Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 120,
        "wires": [
            [
                "00732ba4a1193d0e"
            ]
        ]
    },
    {
        "id": "00732ba4a1193d0e",
        "type": "ui_toast",
        "z": "02e5f353e21060b3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1160,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "515893d1bcbf345d",
        "type": "function",
        "z": "02e5f353e21060b3",
        "name": "certificate",
        "func": "msg.filename = \"/data/certificates/\" + msg.payload.filename + \".crt\";\nmsg.name = msg.payload.filename;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 340,
        "wires": [
            [
                "3cfa3d1cc63c9a19"
            ]
        ]
    },
    {
        "id": "f58dfe5044edbae8",
        "type": "function",
        "z": "02e5f353e21060b3",
        "name": "key",
        "func": "msg.filename = \"/data/certificates/\" + msg.payload.filename + \".key\";\nmsg.name = msg.payload.filename;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "18c80cbabf1178a7"
            ]
        ]
    },
    {
        "id": "3cfa3d1cc63c9a19",
        "type": "file in",
        "z": "02e5f353e21060b3",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "ec9a6248d9413d87",
                "ba30033abe04802c",
                "3eceb158c231d77f"
            ]
        ]
    },
    {
        "id": "18c80cbabf1178a7",
        "type": "file in",
        "z": "02e5f353e21060b3",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "13709fc54983f781",
                "d5c88f634780e59a"
            ]
        ]
    },
    {
        "id": "ec9a6248d9413d87",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "Certificate PEM",
        "order": 2,
        "width": "13",
        "height": "10",
        "format": "<h3>Certificate pem</h3>\n<textarea id=\"cert\" rows=\"30\" cols=\"80\" style=\"font-family:monospace\">{{msg.payload}}</textarea>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "13709fc54983f781",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "Key PEM",
        "order": 11,
        "width": "13",
        "height": "10",
        "format": "<h3>Private key PEM</h3>\n<textarea rows=\"30\" cols=\"80\" style=\"font-family:monospace\">{{msg.payload}}</textarea>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ca04cd3c03b69bb3",
        "type": "ui_button",
        "z": "02e5f353e21060b3",
        "name": "",
        "group": "37ea4f556fa5e416",
        "order": 10,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Clear after download",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 820,
        "wires": [
            [
                "a74546f253797101",
                "088935c97dffe71f",
                "4a520ad16a8b9da3"
            ]
        ]
    },
    {
        "id": "8d588f975b94ca3b",
        "type": "link in",
        "z": "02e5f353e21060b3",
        "name": "Clear PEM",
        "links": [
            "2132fb2796be62ee",
            "a74546f253797101",
            "fd84af3c6fea23d6"
        ],
        "x": 195,
        "y": 300,
        "wires": [
            [
                "c257f43cee90bcdb"
            ]
        ]
    },
    {
        "id": "b1606101e2e52257",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Clear PEM",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "c257f43cee90bcdb",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "13709fc54983f781",
                "ec9a6248d9413d87",
                "d5c88f634780e59a",
                "3eceb158c231d77f",
                "ba30033abe04802c"
            ]
        ]
    },
    {
        "id": "2132fb2796be62ee",
        "type": "link out",
        "z": "02e5f353e21060b3",
        "name": "",
        "mode": "link",
        "links": [
            "8d588f975b94ca3b",
            "59f66dfd8d610c35",
            "40fd8a91b1f8472a",
            "99f4896c2485dde3"
        ],
        "x": 255,
        "y": 180,
        "wires": []
    },
    {
        "id": "a74546f253797101",
        "type": "link out",
        "z": "02e5f353e21060b3",
        "name": "",
        "mode": "link",
        "links": [
            "8d588f975b94ca3b",
            "59f66dfd8d610c35",
            "28eddf97fa12c81c",
            "99f4896c2485dde3"
        ],
        "x": 355,
        "y": 820,
        "wires": []
    },
    {
        "id": "75095d7916fea88a",
        "type": "ui_text_input",
        "z": "02e5f353e21060b3",
        "name": "",
        "label": "P12 passphrase",
        "tooltip": "",
        "group": "37ea4f556fa5e416",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 920,
        "wires": [
            [
                "511c76b4b9ac6240"
            ]
        ]
    },
    {
        "id": "fb970634cafd7e5e",
        "type": "ui_button",
        "z": "02e5f353e21060b3",
        "name": "",
        "group": "37ea4f556fa5e416",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Generate P12",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "5f51ac6f137e7f4e"
            ]
        ]
    },
    {
        "id": "4652b0cc397dcab1",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "certificate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 160,
        "wires": [
            [
                "e5f505bf8e33a634"
            ]
        ]
    },
    {
        "id": "088935c97dffe71f",
        "type": "function",
        "z": "02e5f353e21060b3",
        "name": "",
        "func": "var certificate = flow.get(\"certificate\");\nif(!certificate)\n    return;\nmsg.payload = \"/data/certificates/\" + certificate.filename + \".*\";\nflow.set(\"certifcate\");\nflow.set(\"passphrase\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "6f145d956d1df5ad"
            ]
        ]
    },
    {
        "id": "6f145d956d1df5ad",
        "type": "exec",
        "z": "02e5f353e21060b3",
        "command": "rm ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5f51ac6f137e7f4e",
        "type": "function",
        "z": "02e5f353e21060b3",
        "name": "",
        "func": "var certificate = flow.get(\"certificate\");\nif(!certificate) {\n    msg.error = {\n        message: \"No certificate available for P12\"\n    }\n    return msg;\n}\n\nvar passphrase = flow.get(\"passphrase\");\nif(!passphrase) {\n    msg.error = {\n        message: \"You need to set a passphrase\"\n    }\n    return msg;\n}\n\nif(passphrase.length < 8) {\n    msg.error = {\n        message: \"Passphrase needs to be at least 8 characters\"\n    }\n    return msg;\n}\n\nif(passphrase.indexOf(' ') >= 0) {\n    msg.error = {\n        message: \"Passphrase cannot have space character\"\n    }\n    return msg;\n}\n\n\nmsg.payload = {\n    filename: certificate.filename,\n    passphrase: passphrase\n}\n    \nmsg.request = msg.payload;\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "cda025c9636ee9a6"
            ]
        ]
    },
    {
        "id": "cda025c9636ee9a6",
        "type": "switch",
        "z": "02e5f353e21060b3",
        "name": "Error?",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 620,
        "wires": [
            [
                "456c8ebab75c8578"
            ],
            [
                "d8cfca03076cf4de"
            ]
        ]
    },
    {
        "id": "456c8ebab75c8578",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 600,
        "wires": [
            [
                "acb88ce28e841c48"
            ]
        ]
    },
    {
        "id": "acb88ce28e841c48",
        "type": "ui_toast",
        "z": "02e5f353e21060b3",
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 930,
        "y": 600,
        "wires": []
    },
    {
        "id": "511c76b4b9ac6240",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "passphrase",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "4a520ad16a8b9da3",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 920,
        "wires": [
            [
                "75095d7916fea88a"
            ]
        ]
    },
    {
        "id": "c54132d911835ba1",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "P12 Links",
        "order": 9,
        "width": "6",
        "height": "1",
        "format": "<h3><a id=\"{{'download_p12_'+$id}}\" href=\"\" style=\"color:white\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        if( msg.payload && msg.payload.filename && msg.payload.filename.length ) {\n            $(\"#download_p12_\"+scope.$id).attr(\"href\", \"/file/p12?name=\"+msg.payload.filename);\n            $(\"#download_p12_\"+scope.$id).html(msg.payload.filename+\".p12\");\n        } else {\n            $(\"#download_p12_\"+scope.$id).attr(\"\");\n            $(\"#download_p12_\"+scope.$id).html(\"\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d8cfca03076cf4de",
        "type": "link call",
        "z": "02e5f353e21060b3",
        "name": "",
        "links": [
            "b4add4d73596ca1c"
        ],
        "timeout": "30",
        "x": 680,
        "y": 640,
        "wires": [
            [
                "b32c4c64a5136aa7"
            ]
        ]
    },
    {
        "id": "b32c4c64a5136aa7",
        "type": "switch",
        "z": "02e5f353e21060b3",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 640,
        "wires": [
            [],
            [
                "c54132d911835ba1"
            ]
        ]
    },
    {
        "id": "81b111deb3bc91ad",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "info": "",
        "x": 330,
        "y": 180,
        "wires": []
    },
    {
        "id": "b9867f6a9c9542ad",
        "type": "link in",
        "z": "02e5f353e21060b3",
        "name": "",
        "links": [
            "e5f505bf8e33a634"
        ],
        "x": 195,
        "y": 340,
        "wires": [
            [
                "f58dfe5044edbae8",
                "515893d1bcbf345d"
            ]
        ]
    },
    {
        "id": "e5f505bf8e33a634",
        "type": "link out",
        "z": "02e5f353e21060b3",
        "name": "",
        "mode": "link",
        "links": [
            "974eb9e41b997ef0",
            "b9867f6a9c9542ad"
        ],
        "x": 1105,
        "y": 160,
        "wires": []
    },
    {
        "id": "40fd8a91b1f8472a",
        "type": "link in",
        "z": "02e5f353e21060b3",
        "name": "",
        "links": [
            "fd84af3c6fea23d6",
            "2132fb2796be62ee"
        ],
        "x": 205,
        "y": 920,
        "wires": [
            [
                "4a520ad16a8b9da3"
            ]
        ]
    },
    {
        "id": "8dc91d93303590dc",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 680,
        "wires": [
            [
                "c54132d911835ba1"
            ]
        ]
    },
    {
        "id": "99f4896c2485dde3",
        "type": "link in",
        "z": "02e5f353e21060b3",
        "name": "",
        "links": [
            "fd84af3c6fea23d6",
            "2132fb2796be62ee",
            "a74546f253797101"
        ],
        "x": 215,
        "y": 680,
        "wires": [
            [
                "8dc91d93303590dc"
            ]
        ]
    },
    {
        "id": "eb17b87941cb7475",
        "type": "link call",
        "z": "02e5f353e21060b3",
        "name": "",
        "links": [
            "48f79bb14d6fd4d2"
        ],
        "timeout": "30",
        "x": 520,
        "y": 140,
        "wires": [
            [
                "74f8250482174037"
            ]
        ]
    },
    {
        "id": "d5c88f634780e59a",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "Link certificate",
        "order": 6,
        "width": "6",
        "height": "1",
        "format": "<h3><a id=\"{{'download_'+$id}}\" href=\"\" style=\"color:Yellow\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        if( msg.filename && msg.filename.length ) {\n            $(\"#download_\"+scope.$id).attr(\"href\", \"/file/key?name=\"+msg.name);\n            $(\"#download_\"+scope.$id).html(msg.name+\".key\");\n        } else {\n            $(\"#download_\"+scope.$id).attr(\"\");\n            $(\"#download_\"+scope.$id).html(\"\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ba30033abe04802c",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "Link certificate",
        "order": 5,
        "width": "6",
        "height": "1",
        "format": "<h3><a id=\"{{'download_'+$id}}\" href=\"\" style=\"color:Yellow\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        if( msg.filename && msg.filename.length ) {\n            $(\"#download_\"+scope.$id).attr(\"href\", \"/file/crt?name=\"+msg.name);\n            $(\"#download_\"+scope.$id).html(msg.name+\".crt\");\n        } else {\n            $(\"#download_\"+scope.$id).attr(\"\");\n            $(\"#download_\"+scope.$id).html(\"\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "557741fe0f80addd",
        "type": "ui_dropdown",
        "z": "02e5f353e21060b3",
        "name": "Certificate type",
        "label": "Type",
        "tooltip": "",
        "place": "Select certificate type",
        "group": "37ea4f556fa5e416",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Server certificate",
                "value": "server",
                "type": "str"
            },
            {
                "label": "Client certificate",
                "value": "client",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "a60b8453434c7811"
            ]
        ]
    },
    {
        "id": "a60b8453434c7811",
        "type": "change",
        "z": "02e5f353e21060b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cb9ec4e20c4adb20",
        "type": "function",
        "z": "02e5f353e21060b3",
        "name": "type",
        "func": "msg.payload.type = flow.get(\"type\") || \"server\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 140,
        "wires": [
            [
                "eb17b87941cb7475"
            ]
        ]
    },
    {
        "id": "3eceb158c231d77f",
        "type": "ui_template",
        "z": "02e5f353e21060b3",
        "group": "37ea4f556fa5e416",
        "name": "Link zip",
        "order": 4,
        "width": "6",
        "height": "1",
        "format": "<h3><a id=\"{{'download_'+$id}}\" href=\"\" style=\"color:Yellow\" target=\"_blank\"></a></h3>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        if( msg.filename && msg.filename.length ) {\n            $(\"#download_\"+scope.$id).attr(\"href\", \"/file/zip?name=\"+msg.name);\n            $(\"#download_\"+scope.$id).html(msg.name+\".zip\");\n        } else {\n            $(\"#download_\"+scope.$id).attr(\"\");\n            $(\"#download_\"+scope.$id).html(\"\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "71b356cec81b3c9c",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Cert",
        "info": "",
        "x": 110,
        "y": 340,
        "wires": []
    },
    {
        "id": "4993e6d3e62445b2",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Cert",
        "info": "",
        "x": 1190,
        "y": 160,
        "wires": []
    },
    {
        "id": "2caba219fc589dc6",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "info": "",
        "x": 440,
        "y": 820,
        "wires": []
    },
    {
        "id": "63d7970471256555",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "101ba0830055c994",
        "type": "comment",
        "z": "02e5f353e21060b3",
        "name": "Reset",
        "info": "",
        "x": 130,
        "y": 680,
        "wires": []
    },
    {
        "id": "0c0acf8d36891371",
        "type": "ui_template",
        "z": "20e4ce8802f8b88f",
        "group": "74775ab0c0866553",
        "name": "Certificate PEM",
        "order": 2,
        "width": "13",
        "height": "10",
        "format": "<h3>Paste certificate PEM here</h3>\n<textarea id=\"certificatepem\" rows=\"30\" cols=\"80\" style=\"font-family:monospace\"></textarea>\n\n<script>\nthis.scope.action = function() {\n    console.log(\"Debug\");\n    return $(\"#certificatepem\").val();\n}\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    Inspect\n</md-button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "d0fb1ecd2395c74a"
            ]
        ]
    },
    {
        "id": "81ee617a56757f65",
        "type": "link call",
        "z": "20e4ce8802f8b88f",
        "name": "",
        "links": [
            "ec974b559029a98a"
        ],
        "timeout": "30",
        "x": 640,
        "y": 120,
        "wires": [
            [
                "1bc7c7e124f1e2f7"
            ]
        ]
    },
    {
        "id": "d0fb1ecd2395c74a",
        "type": "function",
        "z": "20e4ce8802f8b88f",
        "name": "pem",
        "func": "msg.payload = {\n    pem: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "81ee617a56757f65"
            ]
        ]
    },
    {
        "id": "1bc7c7e124f1e2f7",
        "type": "template",
        "z": "20e4ce8802f8b88f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<pre>{{payload}}</pre>",
        "output": "str",
        "x": 830,
        "y": 120,
        "wires": [
            [
                "e6ecbd850ac21ecd"
            ]
        ]
    },
    {
        "id": "e6ecbd850ac21ecd",
        "type": "ui_toast",
        "z": "20e4ce8802f8b88f",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1030,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9e5ccfb2.19c098",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "ZIP cert",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "f75c5d31.f8f4d8"
            ]
        ]
    },
    {
        "id": "2f77af65.904188",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1860,
        "y": 440,
        "wires": []
    },
    {
        "id": "f75c5d31.f8f4d8",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Key file",
        "func": "msg.zip.push({\n        filename: msg.name + \".crt\",\n        payload: msg.payload\n});\nmsg.filename = \"/data/certificates/\" + msg.name + \".key\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 440,
        "wires": [
            [
                "be23ef2b.be374"
            ]
        ]
    },
    {
        "id": "be23ef2b.be374",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "ZIP key",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 940,
        "y": 440,
        "wires": [
            [
                "27e0db35ce463430"
            ]
        ]
    },
    {
        "id": "1ae7f992.0fe28e",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "ZIP",
        "func": "msg.zip.push({\n        filename: msg.ca.filename + \".crt\",\n        payload: msg.payload\n});\nmsg.payload = msg.zip;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 440,
        "wires": [
            [
                "0ca9e5934ba74b82"
            ]
        ]
    },
    {
        "id": "996fbb93.cbfa2",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Headers",
        "func": "msg.headers = {};\nmsg.headers['Content-Description'] = 'File Transfer';\nmsg.headers['Expires'] = '0';\nmsg.headers['Cache-Control'] = 'must-revalidate, post-check=0, pre-check=0';\nmsg.headers['Content-Transfer-Encoding'] = 'binary';\nmsg.headers[\"Content-Type\"] = \"application/x-compressed\",\nmsg.headers['Content-Disposition'] = \"attachment; filename=\" + msg.name + \".zip\";\nmsg.headers[\"Content-Length\"] = msg.payload.length;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 440,
        "wires": [
            [
                "2f77af65.904188"
            ]
        ]
    },
    {
        "id": "0ca9e5934ba74b82",
        "type": "zip",
        "z": "aa7daa87.f23d38",
        "name": "",
        "mode": "compress",
        "filename": "",
        "compressionlevel": 6,
        "outasstring": false,
        "x": 1540,
        "y": 440,
        "wires": [
            [
                "996fbb93.cbfa2"
            ]
        ]
    },
    {
        "id": "3e8832a0748b59b0",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/file/crt",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "36340fec781bb33d"
            ]
        ]
    },
    {
        "id": "759b707285db965b",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Headers",
        "func": "msg.headers = {};\nmsg.headers['Content-Description'] = 'File Transfer';\nmsg.headers['Content-Transfer-Encoding'] = 'binary';\nmsg.headers[\"Content-Type\"] = \"application/octet-stream\",\nmsg.headers['Content-Disposition'] = \"attachment; filename=\" + msg.name + \".crt\";\nmsg.headers[\"Content-Length\"] = msg.payload.length;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 320,
        "wires": [
            [
                "cfeb1eb533512ebb"
            ]
        ]
    },
    {
        "id": "cfeb1eb533512ebb",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 320,
        "wires": []
    },
    {
        "id": "36340fec781bb33d",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Filename",
        "func": "msg.name = msg.payload.name;\nmsg.filename = \"/data/certificates/\" + msg.name + \".crt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "dca79403686a6a21"
            ]
        ]
    },
    {
        "id": "dca79403686a6a21",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "Read certificate file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 650,
        "y": 320,
        "wires": [
            [
                "759b707285db965b"
            ]
        ]
    },
    {
        "id": "e1c85d15b5dc8629",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/file/key",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "0e7cc9f705fe6035"
            ]
        ]
    },
    {
        "id": "1c9e9f64276b1f62",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Headers",
        "func": "msg.headers = {};\nmsg.headers['Content-Description'] = 'File Transfer';\nmsg.headers['Content-Transfer-Encoding'] = 'binary';\nmsg.headers[\"Content-Type\"] = \"application/octet-stream\",\nmsg.headers['Content-Disposition'] = \"attachment; filename=\" + msg.name + \".key\";\nmsg.headers[\"Content-Length\"] = msg.payload.length;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 360,
        "wires": [
            [
                "75d830c7a5c70f9a"
            ]
        ]
    },
    {
        "id": "75d830c7a5c70f9a",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "0e7cc9f705fe6035",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Filename",
        "func": "msg.name = msg.payload.name;\nmsg.filename = \"/data/certificates/\" + msg.name + \".key\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "837c7195b5257faf"
            ]
        ]
    },
    {
        "id": "837c7195b5257faf",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "Read key file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 630,
        "y": 360,
        "wires": [
            [
                "1c9e9f64276b1f62"
            ]
        ]
    },
    {
        "id": "52e1bf49a1afac7a",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/file/p12",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "d19a5937268b4502"
            ]
        ]
    },
    {
        "id": "d191d898edcd7022",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Headers",
        "func": "msg.headers = {};\nmsg.headers['Content-Description'] = 'File Transfer';\nmsg.headers['Content-Transfer-Encoding'] = 'binary';\nmsg.headers[\"Content-Type\"] = \"application/x-pkcs12\",\nmsg.headers['Content-Disposition'] = \"attachment; filename=\" + msg.name + \".p12\";\nmsg.headers[\"Content-Length\"] = msg.payload.length;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 400,
        "wires": [
            [
                "543244359869a7a7"
            ]
        ]
    },
    {
        "id": "543244359869a7a7",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 400,
        "wires": []
    },
    {
        "id": "d19a5937268b4502",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Filename",
        "func": "msg.name = msg.payload.name;\nmsg.filename = \"/data/certificates/\" + msg.name + \".p12\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 400,
        "wires": [
            [
                "b2970804b72572ee"
            ]
        ]
    },
    {
        "id": "b2970804b72572ee",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "Read P12 file",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "binary",
        "allProps": false,
        "x": 640,
        "y": 400,
        "wires": [
            [
                "d191d898edcd7022"
            ]
        ]
    },
    {
        "id": "c6a828bdae150576",
        "type": "catch",
        "z": "aa7daa87.f23d38",
        "name": "",
        "scope": [
            "9e5ccfb2.19c098",
            "be23ef2b.be374",
            "dca79403686a6a21",
            "837c7195b5257faf",
            "b2970804b72572ee",
            "a8366702055cb8c6",
            "87906495d90514ce",
            "81aa19c732a8df62"
        ],
        "uncaught": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "b29ad9c7dcee495e"
            ]
        ]
    },
    {
        "id": "b29ad9c7dcee495e",
        "type": "change",
        "z": "aa7daa87.f23d38",
        "name": "Does not exist",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "File does not exist",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "944c78ae8c668516"
            ]
        ]
    },
    {
        "id": "944c78ae8c668516",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "e109bdba64f7e1c6",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/request",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "30fc137e83729b8b"
            ]
        ]
    },
    {
        "id": "0896376f0e0aabd0",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "b74da4e6608907ff",
        "type": "link call",
        "z": "aa7daa87.f23d38",
        "name": "",
        "links": [
            "48f79bb14d6fd4d2"
        ],
        "timeout": "30",
        "x": 650,
        "y": 180,
        "wires": [
            [
                "0896376f0e0aabd0",
                "47dc6265633db7d4"
            ]
        ]
    },
    {
        "id": "30fc137e83729b8b",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Validate",
        "func": "\nif(!msg.payload.cn || msg.payload.cn.length < 6 ) {\n    msg.statusCode = \"400\"\n    msg.payload = {\n        message:\"Property cn is not set\"\n    }\n    node.send([null,msg]);\n    return;\n}\n\nif(!msg.payload.caPassphrase || msg.payload.caPassphrase.length < 6 ) {\n    msg.statusCode = \"500\"\n    msg.payload = {\n        message:\"Property caPassPhrase is not set\"\n    }\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload.type = msg.payload.type || \"server\"\n\nnode.send([msg,null]);\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "b74da4e6608907ff"
            ],
            [
                "a5df559853b4719e"
            ]
        ]
    },
    {
        "id": "a5df559853b4719e",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "01eb4e8ad5f3af19",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/sign",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "23b18cc6b2212652"
            ]
        ]
    },
    {
        "id": "0ed4f3daa264c4a0",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "fb82121b4820187f",
        "type": "link call",
        "z": "aa7daa87.f23d38",
        "name": "",
        "links": [
            "5005447c7403dfdd"
        ],
        "timeout": "30",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "0ed4f3daa264c4a0",
                "47dc6265633db7d4"
            ]
        ]
    },
    {
        "id": "23b18cc6b2212652",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Validate",
        "func": "\nif(!msg.payload.pem || msg.payload.pem.length < 200 ) {\n    msg.statusCode = \"400\"\n    msg.payload = {\n        message:\"Property pem is not set\"\n    }\n    node.send([null,msg]);\n    return;\n}\n\nif(!msg.payload.caPassphrase || msg.payload.caPassPhrase.length < 6 ) {\n    msg.statusCode = \"400\"\n    msg.payload = {\n        message:\"Property caPassPhrase is not set\"\n    }\n    node.send([null,msg]);\n    return;\n}\n\nif(!msg.payload.filename || msg.payload.pem.length < 3 ) {\n    msg.statusCode = \"400\"\n    msg.payload = {\n        message:\"Property filename is not set\"\n    }\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload.filename = msg.payload.filename.replace(/ /g,\"_\").replace(/\\./g,\"_\").replace(/\\//g,\"_\").replace(/\\\\/g,\"_\");\n\nmsg.payload.type = msg.payload.type || \"server\";\n\nnode.send([msg,null]);\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 80,
        "wires": [
            [
                "fb82121b4820187f"
            ],
            [
                "0ce476f2f277927c"
            ]
        ]
    },
    {
        "id": "0ce476f2f277927c",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "daf4d9ee44887b6c",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/file/zip",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "349f056f76c247f0"
            ]
        ]
    },
    {
        "id": "349f056f76c247f0",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "CRT file",
        "func": "msg.name = msg.payload.name;\nmsg.zip = [];\nmsg.filename = \"/data/certificates/\" + msg.name + \".crt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "9e5ccfb2.19c098"
            ]
        ]
    },
    {
        "id": "27e0db35ce463430",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "CA file",
        "func": "msg.zip.push({\n        filename: msg.name + \".key\",\n        payload: msg.payload\n});\n\nmsg.ca = global.get(\"certificates\")[0];\n\nmsg.filename = \"/data/certificates/\" + msg.ca.filename + \".crt\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "a8366702055cb8c6"
            ]
        ]
    },
    {
        "id": "a8366702055cb8c6",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "ZIP CA",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1240,
        "y": 440,
        "wires": [
            [
                "1ae7f992.0fe28e"
            ]
        ]
    },
    {
        "id": "bd4d2c80f76b811f",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/inspect",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 210,
        "y": 660,
        "wires": [
            [
                "c2ef2cd9a705dd7f"
            ]
        ]
    },
    {
        "id": "89ce88ad92aee23f",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Check Input",
        "func": "if( msg.payload.search('-----BEGIN CERTIFICATE-----') < 0 )  {\n    msg.statusCode = 400;\n    msg.payload = \"Invalid certificate\";\n    node.send([msg,null]);\n    return;\n}\n\nif( msg.payload.search('-----END CERTIFICATE-----') < 0 )  {\n    msg.statusCode = 400;\n    msg.payload = \"Invalid certificate\";\n    node.send([msg,null]);\n    return;\n}\n\nmsg.uid = new Date().getTime();\nmsg.filename = '/data/files/' + msg.uid + \".crt\"\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 660,
        "wires": [
            [
                "efe3730d39452993"
            ],
            []
        ]
    },
    {
        "id": "efe3730d39452993",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "Response error",
        "statusCode": "",
        "headers": {},
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "c2ef2cd9a705dd7f",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Convert if file",
        "func": "if( msg.req.files && msg.req.files.length > 0 )\n    msg.payload = msg.req.files[0].buffer.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 660,
        "wires": [
            [
                "89ce88ad92aee23f"
            ]
        ]
    },
    {
        "id": "e83be5a10044cb6f",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/pem",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "fc9c6ba4fc59e10c"
            ]
        ]
    },
    {
        "id": "fc9c6ba4fc59e10c",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "CRT file",
        "func": "msg.name = msg.payload.name;\nmsg.pemCRT = null;\nmsg.pemKEY = null;\nmsg.filename = \"/data/certificates/\" + msg.name + \".crt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 480,
        "wires": [
            [
                "87906495d90514ce"
            ]
        ]
    },
    {
        "id": "87906495d90514ce",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "PEM cert",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 620,
        "y": 480,
        "wires": [
            [
                "cfc68979358082ea"
            ]
        ]
    },
    {
        "id": "cfc68979358082ea",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "Key file",
        "func": "msg.pemCRT = msg.payload;\nmsg.filename = \"/data/certificates/\" + msg.name + \".key\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 480,
        "wires": [
            [
                "81aa19c732a8df62"
            ]
        ]
    },
    {
        "id": "81aa19c732a8df62",
        "type": "file in",
        "z": "aa7daa87.f23d38",
        "name": "PEM Key",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 940,
        "y": 480,
        "wires": [
            [
                "263e0f8dabc9c27a"
            ]
        ]
    },
    {
        "id": "263e0f8dabc9c27a",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "response",
        "func": "msg.payload = {\n    cert: msg.pemCRT,\n    key: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 480,
        "wires": [
            [
                "15bc68dff8517f1b"
            ]
        ]
    },
    {
        "id": "d5c1d763bb6a4779",
        "type": "http in",
        "z": "aa7daa87.f23d38",
        "name": "",
        "url": "/file",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 540,
        "wires": [
            [
                "817a70953f62c110"
            ]
        ]
    },
    {
        "id": "817a70953f62c110",
        "type": "function",
        "z": "aa7daa87.f23d38",
        "name": "CRT file",
        "func": "msg.payload = \"/data/certificate/\" + msg.payload.name + \".*\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "5b93ef7cfa1081b6"
            ]
        ]
    },
    {
        "id": "5b93ef7cfa1081b6",
        "type": "exec",
        "z": "aa7daa87.f23d38",
        "command": "rm",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 540,
        "wires": [
            [],
            [],
            [
                "46eeb76a827284b4"
            ]
        ]
    },
    {
        "id": "46eeb76a827284b4",
        "type": "switch",
        "z": "aa7daa87.f23d38",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "0e1a0ff33704f8d6"
            ],
            [
                "77d61f8e93d21ff9"
            ]
        ]
    },
    {
        "id": "0e1a0ff33704f8d6",
        "type": "change",
        "z": "aa7daa87.f23d38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Could not remove certificates",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 520,
        "wires": [
            [
                "6b94e6e16c6d5be7"
            ]
        ]
    },
    {
        "id": "77d61f8e93d21ff9",
        "type": "change",
        "z": "aa7daa87.f23d38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 560,
        "wires": [
            [
                "6b94e6e16c6d5be7"
            ]
        ]
    },
    {
        "id": "6b94e6e16c6d5be7",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 540,
        "wires": []
    },
    {
        "id": "15bc68dff8517f1b",
        "type": "http response",
        "z": "aa7daa87.f23d38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 480,
        "wires": []
    },
    {
        "id": "47dc6265633db7d4",
        "type": "link out",
        "z": "aa7daa87.f23d38",
        "name": "",
        "mode": "link",
        "links": [
            "974eb9e41b997ef0"
        ],
        "x": 815,
        "y": 120,
        "wires": []
    },
    {
        "id": "861f223fa69f58f6",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    cn: \"some.server.name\",\n    caPassphrase: \"The CA passphrase\",\n    days: number (Optional),\n    type: \"server\" || \"client\"\n    keylength: number (Optional)\n}\n*/\n\nmsg.request = msg.payload;\n\nmsg.request.keylength = msg.payload.keylength || 2048;\nmsg.request.days = msg.payload.days || 365;\nmsg.request.filename = msg.payload.cn.replace(/ /g,\"_\").replace(/\\./g,\"_\").replace(/\\//g,\"_\").replace(/\\\\/g,\"_\");\nmsg.request.certificateType = msg.payload.type || \"server\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "cd8ea9d5518f8889"
            ]
        ]
    },
    {
        "id": "c3908da10afd7a29",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "15",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 880,
        "wires": [
            [],
            [],
            [
                "3d1f0e61911f4a19",
                "94a88e6ba05bd772"
            ]
        ]
    },
    {
        "id": "cd8ea9d5518f8889",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "OpenSSL Generate key",
        "func": "msg.payload = 'genrsa -out /data/certificates/' + msg.request.filename + \".key \" + msg.request.keylength;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 880,
        "wires": [
            [
                "c3908da10afd7a29"
            ]
        ]
    },
    {
        "id": "3d1f0e61911f4a19",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 880,
        "wires": [
            [
                "04a569193e606443"
            ],
            [
                "ac27542e4e121f23"
            ]
        ]
    },
    {
        "id": "04a569193e606443",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to generate key\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 880,
        "wires": [
            [
                "282d0dd7cd4d02f0"
            ]
        ]
    },
    {
        "id": "ec3e94f7e1f9ce45",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 940,
        "wires": [
            [],
            [],
            [
                "2843b954d59d0f2f",
                "94a88e6ba05bd772"
            ]
        ]
    },
    {
        "id": "ac27542e4e121f23",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Generate CSR",
        "func": "msg.payload = ' req -new -config /data/openssl/openssl.conf -extensions client_cert'\nmsg.payload += ' -key ' + \"/data/certificates/\" + msg.request.filename + \".key\";\nmsg.payload += ' -out /data/certificates/' + msg.request.filename + \".csr\";\nmsg.payload += ' -subj \"/CN=' + msg.request.cn + '\" ';\nmsg.payload += ' -addext \"subjectAltName= DNS:' + msg.request.cn +'\"';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 940,
        "wires": [
            [
                "ec3e94f7e1f9ce45",
                "2392e7781425b1df"
            ]
        ]
    },
    {
        "id": "2843b954d59d0f2f",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 940,
        "wires": [
            [
                "6aebe08561872b3d"
            ],
            [
                "efd66056a13d62f2"
            ]
        ]
    },
    {
        "id": "6aebe08561872b3d",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to generate csr\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 940,
        "wires": [
            [
                "282d0dd7cd4d02f0"
            ]
        ]
    },
    {
        "id": "efd66056a13d62f2",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Sign Certificate",
        "func": "msg.payload = ' ca -notext -batch -notext -md sha256'\nmsg.payload += ' -days ' + msg.request.days;\nmsg.payload += ' -config /data/openssl/openssl.conf'\n\nif( msg.request.certificateType === \"client\")\n    msg.payload += ' -extensions client_cert';\nelse\n    msg.payload += ' -extensions server_cert'\nmsg.payload += ' -in /data/certificates/' + msg.request.filename + \".csr\";\nmsg.payload += ' -out /data/certificates/' + msg.request.filename + \".crt\";\nmsg.payload += ' -passin pass:' + msg.request.caPassphrase\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "95c0ca331b9cc36a"
            ]
        ]
    },
    {
        "id": "95c0ca331b9cc36a",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 1000,
        "wires": [
            [],
            [],
            [
                "3645eee305c3c8da",
                "94a88e6ba05bd772"
            ]
        ]
    },
    {
        "id": "3645eee305c3c8da",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "b4f5d60f2e0c5855"
            ],
            [
                "74450437901e62d1"
            ]
        ]
    },
    {
        "id": "b4f5d60f2e0c5855",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to sign certificate\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1000,
        "wires": [
            [
                "282d0dd7cd4d02f0"
            ]
        ]
    },
    {
        "id": "74450437901e62d1",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nmsg.payload = msg.request;\nmsg.payload.timestamp = new Date();\ndelete msg.payload.caPassphrase;\ndelete msg.payload.certificateType;\n\nvar certificates = global.get(\"certificates\");\ncertificates.push(msg.payload);\nglobal.set(\"certificates\",certificates);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1060,
        "wires": [
            [
                "282d0dd7cd4d02f0",
                "79a5604a13514e84"
            ]
        ]
    },
    {
        "id": "48f79bb14d6fd4d2",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Request Certificate",
        "links": [],
        "x": 345,
        "y": 880,
        "wires": [
            [
                "861f223fa69f58f6"
            ]
        ]
    },
    {
        "id": "282d0dd7cd4d02f0",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 880,
        "wires": []
    },
    {
        "id": "6eabda68ee15254e",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Request Certificate",
        "info": "",
        "x": 230,
        "y": 880,
        "wires": []
    },
    {
        "id": "9c37253fadb963bb",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Generate CA Private Key",
        "func": "msg.payload = ' genrsa ';\nmsg.payload += ' -out /data/openssl/root.key';\nmsg.payload += ' -aes256 -passout pass:' + msg.request.caPassphrase;\nmsg.payload += ' ' + msg.request.keylength;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "fc5a798a38a2c92b"
            ]
        ]
    },
    {
        "id": "fc5a798a38a2c92b",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "60",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "d5527d8e41f1abba"
            ]
        ]
    },
    {
        "id": "3d45b4d886c99a9f",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Generate Root Certificate",
        "func": "msg.payload = ' req -x509 -new -nodes -days 3650'\nmsg.payload += ' -key /data/openssl/root.key'\nmsg.payload += ' -out /data/openssl/root.crt'\nmsg.payload += ' -passin pass:' + msg.request.caPassphrase\nmsg.payload += ' -subj \"/O=' + msg.request.organization + '/CN=' + msg.request.cn +'\"';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            [
                "4db22bfc992016f1"
            ]
        ]
    },
    {
        "id": "4db22bfc992016f1",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "dc5e86ae8fae728e"
            ]
        ]
    },
    {
        "id": "75682cd4a27ecf02",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Generate CRL",
        "func": "msg.payload = 'ca -notext -config /data/openssl/openssl.conf -gencrl -out /data/openssl/crl/crl.pem';\nmsg.payload += ' -passin pass:' + msg.request.caPassphrase\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 540,
        "wires": [
            [
                "ced2291e22d88f33"
            ]
        ]
    },
    {
        "id": "ced2291e22d88f33",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "60",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 540,
        "wires": [
            [],
            [],
            [
                "6828b4315b8503aa"
            ]
        ]
    },
    {
        "id": "5d8dcb657b4b0f47",
        "type": "template",
        "z": "e325035d97b5ddfc",
        "name": "openssl.conf",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "HOME\t\t\t= /data/openssl\nRANDFILE\t\t= /data/openssl/.rnd\n#oid_file\t\t= /data/openssl/.oid\noid_section\t\t= new_oids\n\n[ new_oids ]\ntsa_policy1 = 1.2.3.4.1\ntsa_policy2 = 1.2.3.4.5.6\ntsa_policy3 = 1.2.3.4.5.7\n\n[ ca ]\ndefault_ca\t= CA_default\n\n[ CA_default ]\ndir\t\t\t\t= /data/openssl\ncerts\t\t\t= $dir/certs\ncrl_dir\t\t\t= $dir/crl\ndatabase\t\t= $dir/index.txt\nnew_certs_dir\t= $dir/newcerts\nunique_subject\t= no\n\ncertificate\t\t= $dir/root.crt\nserial\t\t\t= $dir/serial\ncrlnumber\t\t= $dir/crlnumber\ncrl\t\t\t\t= $dir/crl.pem\nprivate_key\t\t= $dir/root.key\nRANDFILE\t\t= $dir/.rand\nx509_extensions\t= v3_ca\n\nname_opt = ca_default\t\t# Subject Name options\ncert_opt= ca_default\t\t# Certificate field options\n\n# Extension copying option: use with caution.\ncopy_extensions = copy\n\ndefault_days\t= 365\ndefault_crl_days= 5\ndefault_md\t\t= default\npreserve\t\t= no\n\npolicy\t\t\t= policy_match\n# For the CA policy\n[ policy_match ]\ncountryName\t\t\t\t= optional\nstateOrProvinceName\t\t= optional\norganizationName\t\t= optional\norganizationalUnitName\t= optional\ncommonName\t\t\t\t= supplied\nemailAddress\t\t\t= optional\n\n####################################################################\n[ req ]\ndefault_bits\t\t=  2048\ndistinguished_name\t= req_distinguished_name\nattributes\t\t\t= req_attributes\nx509_extensions\t\t= v3_ca\nstring_mask         = utf8only\nstring_mask\t\t\t= utf8only\n\n[ req_distinguished_name ]\ncommonName\t\t\t\t= Common Name\ncommonName_max\t\t\t= 64\nemailAddress\t\t\t= Email Address\nemailAddress_max\t\t= 64\n\n[ req_attributes ]\n\n[ server_cert ]\nbasicConstraints\t= CA:FALSE\nnsCertType\t\t\t= server\nextendedKeyUsage\t= serverAuth\n#authorityInfoAccess     = OCSP;URI:http://ocsp.\n\n# PKIX recommendations harmless if included in all certificates.\nsubjectKeyIdentifier\t=hash\nauthorityKeyIdentifier\t=keyid,issuer\n\n[ client_cert ]\nbasicConstraints\t\t= CA:FALSE\nnsCertType\t\t\t\t= client\nkeyUsage\t\t\t\t= nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage\t\t= clientAuth\n#authorityInfoAccess     = OCSP;URI:http://ocsp.\n\n[ v3_OCSP ]\nbasicConstraints\t\t= CA:FALSE\nkeyUsage\t\t\t\t= nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage\t\t= OCSPSigning\n\n[ v3_req ]\nbasicConstraints\t= CA:FALSE\nkeyUsage\t\t\t= nonRepudiation, digitalSignature, keyEncipherment\n\n[ v3_ca ]\nbasicConstraints\t\t= CA:true\nsubjectKeyIdentifier\t= hash\nauthorityKeyIdentifier\t= keyid:always,issuer\n# Key usage: this is typical for a CA certificate. However since it will\n# prevent it being used as an test self-signed certificate it is best\n# left out by default.\n# keyUsage = cRLSign, keyCertSign\nnsCertType = sslCA, emailCA\n\n[ v3_intermediate_ca ]\nsubjectKeyIdentifier\t= hash\nauthorityKeyIdentifier\t= keyid:always,issuer\nbasicConstraints\t\t= critical, CA:true, pathlen:1\nkeyUsage\t\t\t\t= critical, digitalSignature, cRLSign, keyCertSign\n\n[ crl_ext ]\nauthorityKeyIdentifier=keyid:always\n\n[ proxy_cert_ext ]\nbasicConstraints\t= CA:FALSE\n#nsComment\t\t\t= \"OpenSSL Generated Certificate\"\n\n# This really needs to be in place for it to be a proxy certificate.\nproxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo\n",
        "output": "str",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "504d027010caa8e3"
            ]
        ]
    },
    {
        "id": "504d027010caa8e3",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/openssl/openssl.conf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 760,
        "y": 140,
        "wires": [
            [
                "23b25d73aef99993"
            ]
        ]
    },
    {
        "id": "23b25d73aef99993",
        "type": "template",
        "z": "e325035d97b5ddfc",
        "name": "index.txt",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 520,
        "y": 180,
        "wires": [
            [
                "99dd7ab59e60dfb6"
            ]
        ]
    },
    {
        "id": "99dd7ab59e60dfb6",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/openssl/index.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 740,
        "y": 180,
        "wires": [
            [
                "ccd0c2701f2f7adb"
            ]
        ]
    },
    {
        "id": "ccd0c2701f2f7adb",
        "type": "template",
        "z": "e325035d97b5ddfc",
        "name": "serial",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "100000",
        "output": "str",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "41313bd805eee44b"
            ]
        ]
    },
    {
        "id": "41313bd805eee44b",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/openssl/serial",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 730,
        "y": 220,
        "wires": [
            [
                "75c8b6d88c542964"
            ]
        ]
    },
    {
        "id": "2188b8e1a43f2b79",
        "type": "template",
        "z": "e325035d97b5ddfc",
        "name": "index.txt.attr",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "unique_subject = no",
        "output": "str",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "2e9f243666a68ef6"
            ]
        ]
    },
    {
        "id": "2e9f243666a68ef6",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/openssl/index.txt.attr",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 760,
        "y": 300,
        "wires": [
            [
                "b418b9d46e0a14c8"
            ]
        ]
    },
    {
        "id": "75c8b6d88c542964",
        "type": "template",
        "z": "e325035d97b5ddfc",
        "name": "crlnumber",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "01",
        "output": "str",
        "x": 520,
        "y": 260,
        "wires": [
            [
                "bd2b6c16f0c147a6"
            ]
        ]
    },
    {
        "id": "bd2b6c16f0c147a6",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/openssl/crlnumber",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 750,
        "y": 260,
        "wires": [
            [
                "2188b8e1a43f2b79"
            ]
        ]
    },
    {
        "id": "7a99c63a11691046",
        "type": "fs-ops-mkdir",
        "z": "e325035d97b5ddfc",
        "name": "/openssl",
        "path": "/data",
        "pathType": "str",
        "dirname": "openssl",
        "dirnameType": "str",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 780,
        "y": 80,
        "wires": [
            [
                "02390b45917257fb"
            ]
        ]
    },
    {
        "id": "02390b45917257fb",
        "type": "fs-ops-mkdir",
        "z": "e325035d97b5ddfc",
        "name": "/openssl/crl",
        "path": "/data/openssl",
        "pathType": "str",
        "dirname": "crl",
        "dirnameType": "str",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 950,
        "y": 80,
        "wires": [
            [
                "1041647ffd696fc5"
            ]
        ]
    },
    {
        "id": "1041647ffd696fc5",
        "type": "fs-ops-mkdir",
        "z": "e325035d97b5ddfc",
        "name": "/openssl/newcerts",
        "path": "/data/openssl",
        "pathType": "str",
        "dirname": "newcerts",
        "dirnameType": "str",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "20e61bb27c2c8476"
            ]
        ]
    },
    {
        "id": "20e61bb27c2c8476",
        "type": "fs-ops-mkdir",
        "z": "e325035d97b5ddfc",
        "name": "/openssl/certs",
        "path": "/data/openssl",
        "pathType": "str",
        "dirname": "certs",
        "dirnameType": "str",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1360,
        "y": 80,
        "wires": [
            [
                "5d8dcb657b4b0f47"
            ]
        ]
    },
    {
        "id": "80b90f451ae687e9",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Crete OpenSSL DIrectories",
        "links": [],
        "x": 375,
        "y": 80,
        "wires": [
            [
                "b42ddec108323fe5"
            ]
        ]
    },
    {
        "id": "a044b51f02cbc8e7",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Create OpenSSL directories",
        "info": "",
        "x": 240,
        "y": 80,
        "wires": []
    },
    {
        "id": "5d8ea194ddf8401a",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1175,
        "y": 300,
        "wires": []
    },
    {
        "id": "b42ddec108323fe5",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "rm -R /data/openssl",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "7a99c63a11691046"
            ]
        ]
    },
    {
        "id": "e244ba1d956e1746",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Generate CA certificate",
        "links": [],
        "x": 375,
        "y": 420,
        "wires": [
            [
                "866954f7be0a9abd"
            ]
        ]
    },
    {
        "id": "83aed238ed3ea42e",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Generate CA certificate",
        "info": "",
        "x": 240,
        "y": 420,
        "wires": []
    },
    {
        "id": "d5527d8e41f1abba",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "419cd7ee216e59c2"
            ],
            [
                "3d45b4d886c99a9f"
            ]
        ]
    },
    {
        "id": "419cd7ee216e59c2",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 420,
        "wires": []
    },
    {
        "id": "866954f7be0a9abd",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    cn: \"CA Name\",\n    org: \"Some organization\",\n    caPassphrase: \"The CA passphrase\",\n}\n*/\n\nmsg.request = msg.payload;\n\nmsg.request.keylength = 4096;\nmsg.request.days = 365 * 10;\nmsg.request.filename = msg.request.cn.replace(/ /g,\"_\").replace(/\\./g,\"_\").replace(/\\//g,\"_\").replace(/\\\\/g,\"_\");\nmsg.request.certificateType = \"CA\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "9c37253fadb963bb"
            ]
        ]
    },
    {
        "id": "dc5e86ae8fae728e",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "419cd7ee216e59c2"
            ],
            [
                "75682cd4a27ecf02"
            ]
        ]
    },
    {
        "id": "6828b4315b8503aa",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 540,
        "wires": [
            [
                "419cd7ee216e59c2"
            ],
            [
                "272581df3739906d"
            ]
        ]
    },
    {
        "id": "272581df3739906d",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nmsg.payload = msg.request;\nmsg.payload.timestamp = new Date();\ndelete msg.payload.caPassphrase;\n\nvar certificates = global.get(\"certificates\") || [];\ncertificates.push(msg.payload);\nglobal.set(\"certificates\",certificates);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 540,
        "wires": [
            [
                "419cd7ee216e59c2",
                "74d04164b99c1922",
                "834534a4fb83c204"
            ]
        ]
    },
    {
        "id": "b418b9d46e0a14c8",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Directories created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "5d8ea194ddf8401a"
            ]
        ]
    },
    {
        "id": "6d574372ff9a2320",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Make P12",
        "func": "var filename = msg.payload.filename;\nmsg.payload = \"pkcs12 -export -out /data/certificates/\" + msg.request.filename + \".p12 \";\nmsg.payload += \"-inkey /data/certificates/\" + msg.request.filename + \".key \";\nmsg.payload += \"-in /data/certificates/\" + msg.request.filename + \".crt \";\nmsg.payload += \"-passin pass:\" + msg.request.passphrase + \" -passout pass:\" + msg.request.passphrase\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "364e9d6c8b876a3c"
            ]
        ]
    },
    {
        "id": "364e9d6c8b876a3c",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 1180,
        "wires": [
            [],
            [],
            [
                "efb3146d54979244"
            ]
        ]
    },
    {
        "id": "b4add4d73596ca1c",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Make P12",
        "links": [],
        "x": 275,
        "y": 1180,
        "wires": [
            [
                "e3434c11d0793ba5"
            ]
        ]
    },
    {
        "id": "e3434c11d0793ba5",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    filename: \"Certificate filename\",\n    passphrase: \"some passphrase\"\n}\n*/\n\nmsg.request = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1180,
        "wires": [
            [
                "6d574372ff9a2320"
            ]
        ]
    },
    {
        "id": "efb3146d54979244",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1180,
        "wires": [
            [
                "bc86c6db0187f0a2"
            ],
            [
                "b64dcfdc1b0e61da"
            ]
        ]
    },
    {
        "id": "bc86c6db0187f0a2",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to generate P12\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1180,
        "wires": [
            [
                "dfe089911cdfd4a3"
            ]
        ]
    },
    {
        "id": "b64dcfdc1b0e61da",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nmsg.payload = msg.request;\nmsg.payload.timestamp = new Date();\nmsg.path = \"/file/p12/\" + msg.request.filename + \".p12\";\ndelete msg.payload.passphrase;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1220,
        "wires": [
            [
                "dfe089911cdfd4a3"
            ]
        ]
    },
    {
        "id": "dfe089911cdfd4a3",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3237c3472fa7f3e9",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Make P12",
        "info": "",
        "x": 200,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4a159433f40275e4",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 760,
        "wires": [
            [],
            [],
            [
                "eb30fbe3d16a5a16"
            ]
        ]
    },
    {
        "id": "aef7c67c7665380d",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Sign Certificate",
        "func": "msg.payload = ' ca -notext -batch -notext -md sha256'\nmsg.payload += ' -days ' + msg.request.days;\nmsg.payload += ' -config /data/openssl/openssl.conf'\n\nif( msg.request.certificateType === \"client\")\n    msg.payload += ' -extensions client_cert';\nelse\n    msg.payload += ' -extensions server_cert'\n    \nmsg.payload += ' -in /data/certificates/' + msg.request.filename + \".csr\";\nmsg.payload += ' -out /data/certificates/' + msg.request.filename + \".crt\";\nmsg.payload += ' -passin pass:' + msg.request.caPassphrase\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "4a159433f40275e4"
            ]
        ]
    },
    {
        "id": "5005447c7403dfdd",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Sign CSR",
        "links": [],
        "x": 275,
        "y": 700,
        "wires": [
            [
                "d7bac37872c07b6c"
            ]
        ]
    },
    {
        "id": "d7bac37872c07b6c",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    pem: \"CSR PEM\",\n    filename: \"CSR filename\",\n    caPassphrase: \"passphrase\",\n    days: number (optional),\n    type: \"client | server\"\n}\n*/\n\nmsg.request = msg.payload;\n\nmsg.request.days = msg.payload.days || 365;\nmsg.request.filename = msg.payload.filename.replace(/ /g,\"_\").replace(/\\./g,\"_\").replace(/\\//g,\"_\").replace(/\\\\/g,\"_\");\nmsg.request.certificateType = msg.request.type || \"server\";\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 700,
        "wires": [
            [
                "2d3ab85752dc7309"
            ]
        ]
    },
    {
        "id": "eb30fbe3d16a5a16",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 760,
        "wires": [
            [
                "4ad62f5fd0a0b14b"
            ],
            [
                "055f73942b5ec5d1"
            ]
        ]
    },
    {
        "id": "4ad62f5fd0a0b14b",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to sign certificate\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 760,
        "wires": [
            [
                "851725574801d398"
            ]
        ]
    },
    {
        "id": "055f73942b5ec5d1",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nmsg.payload = msg.request;\nmsg.payload.timestamp = new Date();\ndelete msg.payload.caPassphrase;\ndelete msg.payload.pem;\n\nvar certificates = global.get(\"certificates\");\ncertificates.push(msg.payload);\nglobal.set(\"certificates\",certificates);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 800,
        "wires": [
            [
                "851725574801d398",
                "a70299e4e0b5d0ae"
            ]
        ]
    },
    {
        "id": "851725574801d398",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1585,
        "y": 760,
        "wires": []
    },
    {
        "id": "9652218b65953f23",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Sign CSR",
        "info": "",
        "x": 200,
        "y": 700,
        "wires": []
    },
    {
        "id": "2d3ab85752dc7309",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Save CSR",
        "func": "msg.filename = \"/data/certificates/\" + msg.request.filename + \".csr\";\nmsg.payload = msg.request.pem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "e5b97223f0030ea2"
            ]
        ]
    },
    {
        "id": "e5b97223f0030ea2",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 700,
        "wires": [
            [
                "aef7c67c7665380d"
            ]
        ]
    },
    {
        "id": "834534a4fb83c204",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "certificates",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 540,
        "wires": [
            [
                "5b3ff8598b1b8c62"
            ]
        ]
    },
    {
        "id": "5b3ff8598b1b8c62",
        "type": "json",
        "z": "e325035d97b5ddfc",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1670,
        "y": 540,
        "wires": [
            [
                "578e8feaf16e6c50"
            ]
        ]
    },
    {
        "id": "578e8feaf16e6c50",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/certificates/certificates.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1920,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "74d04164b99c1922",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Copy",
        "func": "msg.payload = \"/data/openssl/root.crt /data/certificates/\" + msg.request.filename + \".crt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 480,
        "wires": [
            [
                "9247ef2488d4ef4b"
            ]
        ]
    },
    {
        "id": "9247ef2488d4ef4b",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "cp",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1670,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a70299e4e0b5d0ae",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "certificates",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 800,
        "wires": [
            [
                "6b76a5a9229ffe06"
            ]
        ]
    },
    {
        "id": "6b76a5a9229ffe06",
        "type": "json",
        "z": "e325035d97b5ddfc",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1910,
        "y": 800,
        "wires": [
            [
                "8a6a37969daaf9c0"
            ]
        ]
    },
    {
        "id": "8a6a37969daaf9c0",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/certificates/certificates.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2140,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "79a5604a13514e84",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "certificates",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1060,
        "wires": [
            [
                "d259e847d2774f22"
            ]
        ]
    },
    {
        "id": "d259e847d2774f22",
        "type": "json",
        "z": "e325035d97b5ddfc",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1690,
        "y": 1060,
        "wires": [
            [
                "c944cdfa09fe1c15"
            ]
        ]
    },
    {
        "id": "c944cdfa09fe1c15",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "",
        "filename": "/data/certificates/certificates.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1920,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "dc570bb213923dd5",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Revoke certificate",
        "func": "\nmsg.payload = 'ca -notext -config /data/openssl/openssl.conf ';\nmsg.payload += '-revoke /data/openssl/newcerts/' + msg.payload.serial + '.pem';\nmsg.payload +=  ' -passin pass:' + msg.request.caPassphrase;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1280,
        "wires": [
            [
                "f3deae11855b12e1"
            ]
        ]
    },
    {
        "id": "f3deae11855b12e1",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "60",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 1280,
        "wires": [
            [],
            [],
            [
                "ce805d3b6772ba8e"
            ]
        ]
    },
    {
        "id": "c7c6dbb11811e057",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    serial: \"Certificate serial\",\n    caPassphrase: \"some passphrase\"\n}\n*/\n\nmsg.request = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1280,
        "wires": [
            [
                "dc570bb213923dd5"
            ]
        ]
    },
    {
        "id": "5060b3acfeaa6bec",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Revoke",
        "links": [],
        "x": 265,
        "y": 1280,
        "wires": [
            [
                "c7c6dbb11811e057"
            ]
        ]
    },
    {
        "id": "bd27bd2b0e5ce450",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Revoke",
        "info": "",
        "x": 190,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ce805d3b6772ba8e",
        "type": "switch",
        "z": "e325035d97b5ddfc",
        "name": "Error?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1280,
        "wires": [
            [
                "f3cb1f6b92ab3618"
            ],
            [
                "27c55d2a2a81c9e0"
            ]
        ]
    },
    {
        "id": "f3cb1f6b92ab3618",
        "type": "change",
        "z": "e325035d97b5ddfc",
        "name": "Error response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Unable to revoke cerificate\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1280,
        "wires": [
            [
                "653de9c40ce6e7c0"
            ]
        ]
    },
    {
        "id": "27c55d2a2a81c9e0",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nmsg.payload = msg.request;\nmsg.payload.timestamp = new Date();\ndelete msg.payload.caPassphrase;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1320,
        "wires": [
            [
                "653de9c40ce6e7c0"
            ]
        ]
    },
    {
        "id": "653de9c40ce6e7c0",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1d23440c0b87816c",
        "type": "file",
        "z": "e325035d97b5ddfc",
        "name": "Save pem",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 1400,
        "wires": [
            [
                "9fb337ecbe1bac45"
            ]
        ]
    },
    {
        "id": "9fb337ecbe1bac45",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Open CRT",
        "func": "msg.payload = \"x509 -in \" + msg.filename + \" -text\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1400,
        "wires": [
            [
                "78b7b0508b3feff9"
            ]
        ]
    },
    {
        "id": "78b7b0508b3feff9",
        "type": "exec",
        "z": "e325035d97b5ddfc",
        "command": "openssl",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 1400,
        "wires": [
            [
                "a409b78b97c24c87"
            ],
            [],
            []
        ]
    },
    {
        "id": "abb49ed77ccb7ba3",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Request",
        "func": "/*\nmsg.payload = {\n    pem: \"certificate pem\",\n}\n*/\n\nmsg.filename = \"/data/certificates/inspect.pem\"\nmsg.payload = msg.payload.pem;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1400,
        "wires": [
            [
                "1d23440c0b87816c"
            ]
        ]
    },
    {
        "id": "ec974b559029a98a",
        "type": "link in",
        "z": "e325035d97b5ddfc",
        "name": "Inspect",
        "links": [],
        "x": 265,
        "y": 1400,
        "wires": [
            [
                "abb49ed77ccb7ba3"
            ]
        ]
    },
    {
        "id": "0921f7ad6fdf800e",
        "type": "comment",
        "z": "e325035d97b5ddfc",
        "name": "Inspect",
        "info": "",
        "x": 190,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a409b78b97c24c87",
        "type": "function",
        "z": "e325035d97b5ddfc",
        "name": "Response",
        "func": "msg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1400,
        "wires": [
            [
                "5eeac357d1536fc3"
            ]
        ]
    },
    {
        "id": "5eeac357d1536fc3",
        "type": "link out",
        "z": "e325035d97b5ddfc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 1400,
        "wires": []
    },
    {
        "id": "94a88e6ba05bd772",
        "type": "debug",
        "z": "e325035d97b5ddfc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 880,
        "wires": []
    },
    {
        "id": "2392e7781425b1df",
        "type": "debug",
        "z": "e325035d97b5ddfc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1060,
        "wires": []
    }
]